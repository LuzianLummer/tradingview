version: '3.8'

services:
  postgres:
    image: postgres:15
    env_file:
      - .env
    ports:
      - "${POSTGRES_EXTERNAL_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # ORM is the single source of truth for schema; no SQL init file mounted
    healthcheck:
       test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
       interval: ${HEALTHCHECK_INTERVAL:-5s}
       timeout: ${HEALTHCHECK_TIMEOUT:-5s}
       retries: ${HEALTHCHECK_RETRIES:-5}

  # Airflow Services
  redis:
    image: redis:7-alpine
    env_file:
      - .env
    ports:
      - "${REDIS_EXTERNAL_PORT:-6379}:6379"

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    env_file:
      - .env
    environment:
      AIRFLOW_HOME: /opt/airflow
      PYTHONPATH: /opt/airflow/tradingview_project
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["/bin/bash", "-c", "airflow db migrate || true"]

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    env_file:
      - .env
    ports:
      - "${AIRFLOW_WEBSERVER_PORT:-8080}:8080"
    environment:
      AIRFLOW_HOME: /opt/airflow
      PYTHONPATH: /opt/airflow/tradingview_project
    volumes:
      - ./dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - .:/opt/airflow/tradingview_project
    depends_on:
      redis:
        condition: service_started
      airflow-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    command: ["airflow", "webserver"]

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    env_file:
      - .env
    environment:
      AIRFLOW_HOME: /opt/airflow
      PYTHONPATH: /opt/airflow/tradingview_project
    volumes:
      - ./dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - .:/opt/airflow/tradingview_project
    depends_on:
      redis:
        condition: service_started
      airflow-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    command: ["airflow", "scheduler"]

  airflow-worker:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    env_file:
      - .env
    environment:
      AIRFLOW_HOME: /opt/airflow 
      PYTHONPATH: /opt/airflow/tradingview_project
    volumes:
      - ./dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - .:/opt/airflow/tradingview_project
    depends_on:
      redis:
        condition: service_started
      airflow-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    command: ["airflow", "celery", "worker"]

  ingestion:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./dags:/app/dags
      - ./src/ingestion/tickers.txt:/app/src/ingestion/tickers.txt
    depends_on:
      postgres:
        condition: service_healthy
      
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER:-tradingview}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-tradingview}
      - POSTGRES_DB=${POSTGRES_DB:-tradingview}
      - API_TIMEOUT=${API_TIMEOUT:-15}
      - API_MAX_RETRIES=${API_MAX_RETRIES:-3}
      - API_BACKOFF_FACTOR=${API_BACKOFF_FACTOR:-2}

volumes:
  postgres_data: 
  airflow_logs: